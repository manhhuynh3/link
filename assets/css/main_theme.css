/* CSS Variables for theming */
        :root { /* Night Mode Defaults (Blue + Black) */
            --color-bg-primary: #020617; /* slate-950 */
            --color-bg-secondary: #0f172a; /* slate-900 for section background gradient */
            --color-bg-card: #1e293b; /* slate-800 equivalent for cards/form */
            --color-text-main: #f8fafc; /* slate-50 */
            --color-text-heading: #3b82f6; /* blue-500 */
            --color-text-strong-accent: #60a5fa; /* blue-400 */
            --color-text-green-accent: #22c55e; /* green-500 */
            --color-button-primary: #3b82f6; /* blue-500 */
            --color-button-primary-hover: #2563eb; /* blue-600 */
            --color-border-main: #334155; /* slate-700 */
            --color-gray-text: #94a3b8; /* slate-400 */
            --color-medium-gray-text: #64748b; /* slate-600 */
            --color-hero-overlay-bg: rgba(0, 0, 0, 0.5); /* Glassmorphism effect base - Changed to 0.5 opacity */
            --color-link-primary: #3b82f6; /* blue-500 for links */
            --color-link-hover: #60a5fa; /* blue-400 for links hover */
            --color-shadow-card: 0 10px 15px -3px rgba(0,0,0,0.5), 0 4px 6px -2px rgba(0,0,0,0.2); /* Adjusted for dark mode */
            --color-gradient-from-1: #020617; /* slate-950 */
            --color-gradient-to-1: #0f172a; /* slate-900 */
            --color-gradient-from-2: #0f172a; /* slate-900 */
            --color-gradient-to-2: #020617; /* slate-950 */
            --color-header-gradient-from: #2563eb; /* blue-600 */
            --color-header-gradient-to: #1d4ed8; /* blue-700 */
            --color-button-border-color: #3b82f6; /* blue-500 */
            --color-button-text-secondary: #bfdbfe; /* blue-200 */
            --color-3d-object: #3b82f6; /* Three.js Blue - kept for consistency, but not used by 3D object anymore */
            --color-mobile-overlay-rgb: 2, 6, 23; /* RGB for rgba() from slate-950 */
            --color-header-glass-bg-blue: linear-gradient(to right, var(--color-gradient-from-1), var(--color-gradient-to-1)); /* Gradient nhạt cho header (Dark Mode) */
            /* New color for skill tags */
            --color-skill-tag-bg: #475569; /* slate-700 for a muted grey tag */
            --color-header-bg-dark: #26262694;
            --color-header-text-dark: #fff;
            --color-mobile-icon-dark: #fff;
            --color-header-bg-light: #f8f9fe94;
            --color-header-text-light: #111;
            --color-mobile-icon-light: #111;
        }

        body[data-theme='light'] { /* Light Mode Overrides (Blue + White) */
            --color-bg-primary: #ffffff; /* white */
            --color-bg-secondary: #f1f5f9; /* slate-100 */
            --color-bg-card: #ffffff; /* white */
            --color-text-main: #1e293b; /* slate-800 - dark blue-gray */
            --color-text-heading: #2563eb; /* blue-600 */
            --color-text-strong-accent: #1d4ed8; /* blue-700 */
            --color-text-green-accent: #16a34a; /* green-600 */
            --color-button-primary: #2563eb; /* blue-600 */
            --color-button-primary-hover: #1d4ed8; /* blue-700 */
            --color-border-main: #e2e8f0; /* slate-200 */
            --color-gray-text: #64748b; /* slate-600 */
            --color-medium-gray-text: #475569; /* slate-700 */
            --color-hero-overlay-bg: rgba(255, 255, 255, 0.5); /* Glassmorphism effect base - Changed to 0.5 opacity */
            --color-link-primary: #2563eb; /* blue-600 for links */
            --color-link-hover: #1d4ed8; /* blue-700 for links hover */
            --color-shadow-card: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06); /* shadow-md */
            --color-gradient-from-1: #eff6ff; /* blue-50 */
            --color-gradient-to-1: #dbeafe; /* blue-100 */
            --color-gradient-from-2: #dbeafe; /* blue-100 */
            --color-gradient-to-2: #eff6ff; /* blue-50 */
            --color-header-gradient-from: #2563eb; /* blue-600 */
            --color-header-gradient-to: #1d4ed8; /* blue-700 */
            --color-button-border-color: #2563eb; /* blue-600 */
            --color-button-text-secondary: #2563eb; /* blue-600 */
            --color-3d-object: #3b82f6; /* Three.js Blue */
            --color-mobile-overlay-rgb: 255, 255, 255; /* RGB for rgba() from white */
            --color-header-glass-bg-blue: linear-gradient(to right, var(--color-gradient-from-1), var(--color-gradient-to-1)); /* Gradient nhạt cho header (Light Mode) */
            /* New color for skill tags */
            --color-skill-tag-bg: #94a3b8; /* slate-400 for a muted grey tag */
        }

        
        /* Apply variables to base elements and sections */
        body {
            background-color: var(--color-bg-primary);
            color: var(--color-text-main);
            padding-top: 0; /* Handled by JS on load */
            /* Removed padding-left for body on mobile as sidebar is now overlay */
        }
        
        /* Removed @media (max-width: 767px) { body { padding-left: 3.5rem; } } */

        header {
            color:#1d4ed8 !important;
            background: #f8f9fe94 !important;
            -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(0,0,0,0.06);
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            padding-left: 1rem;
            padding-right: 1rem;
        }

        @media (min-width: 768px) {
            header {
                padding-left: 2rem;
                padding-right: 2rem;
            }
        }

        /* Explicitly set header logo and footer text color to white */
        header .text-main, /* Applies to Mạnh Huỳnh logo text */
        header nav ul li a {
            color: #020617 !important;
        }

        footer .text-main,
        footer p {
            color: #ffffff !important;
        }

        /* Desktop navigation links should be white */
        header nav ul li a { /* Targeting desktop nav links */
            color: #ffffff !important; /* Ensure they remain white against the header background */
        }

        footer {
            background: linear-gradient(to right, var(--color-header-gradient-from), var(--color-header-gradient-to));
            color: #ffffff; /* Fallback/explicit for clarity */
        }
     

        /* Custom classes to replace direct Tailwind colors for dynamic theming */
        .bg-card { /* Replaces bg-gray-800 */
            background-color: var(--color-bg-card);
        }
        .text-main { /* Replaces text-white, text-gray-300 based on context */
            color: var(--color-text-main);
        }
        .text-heading { /* Replaces text-purple-400 */
            color: var(--color-text-heading);
        }
        .text-accent-strong { /* Replaces text-purple-300 */
            color: var(--color-text-strong-accent);
        }
        .text-accent-green { /* Replaces text-green-400 */
            color: var(--color-text-green-accent);
        }
        .text-gray-normal { /* Replaces text-gray-300 for general text */
            color: var(--color-gray-text);
        }
        .text-gray-medium { /* Replaces text-gray-400 */
            color: var(--color-medium-gray-text);
        }
        .bg-primary-button { /* Replaces bg-purple-600 */
            background-color: var(--color-button-primary);
        }
        .bg-primary-button:hover { /* Replaces hover:bg-purple-700 */
            background-color: var(--color-button-primary-hover);
        }
        .border-primary-button { /* Replaces border-purple-600 */
            border-color: var(--color-button-border-color);
        }

        /* Text color for primary buttons (always white) */
        button,
        .bg-primary-button,
        a.bg-primary-button {
            color: #ffffff !important;
        }

        /* Text color for secondary buttons (uses theme variable for initial color, white on hover) */
        .text-secondary-button-color {
            color: var(--color-button-text-secondary);
        }
        /* Specific rule for the hover effect for buttons with border-primary-button class */
        a.border-primary-button:hover {
            color: #ffffff !important; /* Force white text on hover */
        }

        .hover\:bg-primary-button:hover { /* Replaces hover:bg-purple-600 */
            background-color: var(--color-button-primary);
        }
        .hover\:text-white:hover { /* Replaces hover:text-white */
            color: #ffffff; /* Explicitly white for hover text on secondary button */
        }
        .link-primary { /* Replaces text-purple-400 for links */
            color: var(--color-link-primary);
        }
        .link-primary:hover { /* Replaces hover:text-purple-300 for links */
            color: var(--color-link-hover);
        }
        .border-main { /* Replaces border-gray-700, border-gray-600 */
            border-color: var(--color-border-main);
        }
        .bg-form-input { /* Replaces bg-gray-700 */
            background-color: var(--color-bg-card); /* Use card background for form inputs */
        }
        .focus\:border-primary-button:focus { /* Replaces focus:border-purple-500 */
            border-color: var(--color-button-primary);
        }
        .focus\:ring-primary-button:focus { /* Replaces focus:ring-purple-500 */
            --tw-ring-color: var(--color-button-primary);
            box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        }


        /* Hero overlay for Glassmorphism */
        #hero-text-content {
            background-color: var(--color-hero-overlay-bg);
            backdrop-filter: blur(10px); /* Glassmorphism effect */
            -webkit-backdrop-filter: blur(10px); /* Safari support */
            border: 1px solid rgba(255, 255, 255, 0.1); /* Subtle border for glass look, fixed white for contrast */
        }

        /* Mobile toggle button and menu */
        #mobile-toggle {
            position: fixed;
            top: 50%; 
            left: 0;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.491) !important; /* Nền trắng, alpha cao hơn header */
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05);
            z-index: 50;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center; /* Center content vertically */
            transition: width 0.3s ease-in-out, height 0.3s ease-in-out, border-radius 0.3s ease-in-out;
            /* Border radius for initial collapsed state (half-circle) */
            border-top-right-radius: 9999px;
            border-bottom-right-radius: 9999px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            border-right: 1px solid rgba(255, 255, 255, 0.1); /* Subtle border for glass look */
        }

        /* Collapsed state */
        #mobile-toggle.collapsed {
            width: 40px; /* Tailwind w-10 */
            height: 80px; /* Adjust height for the half-circle with centered icon */
            padding: 0; /* Remove padding when collapsed */
            overflow: hidden; /* Hide menu items that exceed the toggle's height */
        }

        /* Expanded state */
        #mobile-toggle.expanded {
            width: 50px; /* Adjusted from 64px to 50px */
            height: auto; /* Allow content to dictate height */
            border-top-right-radius: 16px; /* rounded-xl */
            border-bottom-right-radius: 16px; /* rounded-xl */
            padding: 12px 0; /* py-3 px-0 */
            gap: 16px; /* space-y-4 for ul items + gap for main container */
        }

        /* Icon in toggle button */
        #mobile-toggle > i.fa-solid {
            color: #111 !important; /* icon và mũi tên màu đen */
            font-size: 1.5rem; /* text-2xl from menu items */
            transition: transform 0.3s ease;
            cursor: pointer;
        }

        /* Icon rotation */
        #mobile-toggle.collapsed > i.fa-solid {
            transform: rotate(0deg); /* points right */
        }
        #mobile-toggle.expanded > i.fa-solid {
            transform: rotate(180deg); /* points left */
        }

        /* Menu items within toggle */
        #mobile-toggle ul {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 0; /* Remove default ul padding */
            margin: 0; /* Remove default ul margin */
        }

        /* Hide the UL content when collapsed */
        #mobile-toggle.collapsed ul {
            display: none; /* Crucial for ensuring only the arrow is visible and centered */
        }

        #mobile-toggle .menu-item {
            opacity: 0;
            pointer-events: none; /* Disable clicks when hidden */
            transition: opacity 0.3s ease, transform 0.3s ease;
            transform: translateX(-10px); /* Slight animation when appearing */
            margin-bottom: 24px; /* mb-6 equivalent, spacing between items */
        }
        /* Last item should not have margin-bottom */
        #mobile-toggle .menu-item:last-child {
            margin-bottom: 0;
        }

        #mobile-toggle.expanded .menu-item {
            opacity: 1;
            pointer-events: auto; /* Enable clicks when visible */
            transform: translateX(0);
        }

        /* Ensure all icons in the menu items are white */
        #mobile-toggle .menu-item a i {
            color: #ffffff !important;
        }

        /* Hide desktop nav on mobile */
        @media (max-width: 767px) {
            header nav ul.hidden.md\:flex {
                display: none;
            }
            #mobile-toggle {
                display: flex; /* Show mobile toggle on small screens */
            }
            /* Adjust header to prevent logo from being under the toggle when collapsed */
            header nav {
                padding-left: 0; /* Removed the 44px padding */
            }
        }
        @media (min-width: 768px) {
            #mobile-toggle {
                display: none; /* Hide mobile toggle on desktop */
            }
        }

        /* Custom Toggle Switch UI (Day/Night Mode) */
        .switch {
            position: relative;
            display: inline-block;
            width: 50px; /* Width of the switch */
            height: 28px; /* Height of the switch */
            margin-right: 1rem; /* Spacing from language button */
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--color-bg-card); /* Background of the track */
            transition: .4s;
            border-radius: 28px; /* Rounded corners for the track */
            border: 2px solid var(--color-border-main); /* Border for the track */
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 20px; /* Height of the knob */
            width: 20px; /* Width of the knob */
            left: 4px; /* Initial position of the knob */
            bottom: 2px; /* Vertically center the knob */
            background-color: var(--color-button-primary); /* Color of the knob */
            transition: .4s;
            border-radius: 50%; /* Make the knob round */
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 14px;
            line-height: 1; /* For emoji/text centering */
        }

        input:checked + .slider {
            background-color: var(--color-bg-card); /* Background of the track when checked */
            border-color: var(--color-button-primary); /* Border color when checked */
        }

        input:focus + .slider {
            box-shadow: 0 0 1px var(--color-button-primary);
        }

        input:checked + .slider:before {
            transform: translateX(20px); /* Move knob to the right when checked */
            background-color: var(--color-button-primary); /* Keep knob color consistent */
        }

        /* Emoji for knob */
        .slider.round:before {
            content: '🌙'; /* Moon for dark mode (default) */
            color: #ffffff; /* Explicitly white for icons in toggle switch */
        }

        input:checked + .slider.round:before {
            content: '☀️'; /* Sun for light mode */
            color: #ffffff; /* Explicitly white for icons in toggle switch */
        }

        /* Timeline specific styles */
        .timeline-container {
            position: relative;
            padding-left: 20px; /* Space for the vertical line */
        }

        .timeline-container::before {
            content: '';
            position: absolute;
            left: 10px; /* Position of the vertical line */
            top: 0;
            bottom: 0;
            width: 2px; /* Thickness of the line */
            background-color: var(--color-border-main); /* Color of the line */
            border-radius: 1px;
        }

        .timeline-item {
            position: relative;
            padding: 20px 0 20px 30px; /* Padding for content and space for dot */
            margin-left: -20px; /* Offset to align with the line */
            text-align: left; /* Ensure text aligns left */
            border-bottom: 1px solid var(--color-border-main); /* Separator between items */
        }

        .timeline-item:last-child {
            border-bottom: none; /* No border for the last item */
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 4px; /* Adjusted: Position of the dot (line + 3px offset for center) */
            top: 24px; /* Adjusted: Vertically center the dot */
            width: 12px; /* Increased Size of the dot */
            height: 12px; /* Increased Size of the dot */
            background-color: var(--color-button-primary); /* Color of the dot */
            border-radius: 50%;
            border: 2px solid var(--color-bg-card); /* Border around the dot, matching card background */
            z-index: 1; /* Ensure dot is above the line */
        }

        .timeline-item-date {
            font-size: 0.9rem;
            color: var(--color-gray-text);
            margin-bottom: 0.5rem;
            display: block; /* Ensures it takes full width for proper spacing */
            margin-top: -8px; /* Adjust to visually align with the dot */
        }
        .timeline-item-title {
            font-size: 1.5rem; /* text-2xl */
            font-weight: 800; /* Changed from 600 to 800 for bolder */
            color: var(--color-accent-strong); /* Keep accent color */
            margin-bottom: 0.5rem;
        }
        .timeline-item-company {
            font-size: 1rem; /* text-md */
            color: var(--color-gray-medium);
            margin-bottom: 0.5rem;
        }
        .timeline-item-description {
            font-size: 1.125rem; /* text-lg */
            color: var(--color-gray-normal);
            list-style-type: disc; /* Ensure bullet points */
            margin-left: 1.25rem; /* Space for bullet points */
        }
        .timeline-item-description strong {
            color: var(--color-accent-green); /* Green accent for strong text in description */
        }

        /* Adjust padding for the timeline heading to align visually with the line */
        #about h3.text-main.mb-6 {
            margin-left: 20px; /* Align with timeline content */
        }

        /* Process Steps specific styles for horizontal layout and connectors */
        .process-steps-container {
            position: relative;
            z-index: 0;
            gap: 2rem; /* Consistent spacing between items */
        }

        .process-step {
            /* Basic styling is covered by Tailwind classes like flex-1, bg-card, p-6, rounded-xl, shadow-md, text-left, relative */
            /* Ensure enough padding for the arrow to not overlap content */
            padding-right: 3rem; /* Increase padding for potential arrow space */
        }

        .process-step:not(:last-child)::after {
            content: '\2192'; /* Right arrow character */
            position: absolute;
            top: 50%;
            right: -2rem; /* Adjust position based on gap, should be in the middle of the gap */
            transform: translateY(-50%);
            font-size: 2.5rem; /* Larger arrow for visibility */
            color: var(--color-text-heading); /* Match heading color */
            z-index: 1;
            pointer-events: none;
            display: none; /* Hidden by default on mobile */
        }

        /* Show arrow only on desktop and larger screens */
        @media (min-width: 768px) {
            .process-step:not(:last-child)::after {
                display: block;
            }
        }

      /* Ensure service-card always shows its content and carousel */
.service-card .service-details-wrapper,
.service-card .project-carousel-wrapper {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: none !important;
    transition: none !important;
    flex-grow: 1; /* Allow them to grow */
    flex-shrink: 1; /* Allow them to shrink */
    min-height: 200px; /* Adjust as needed */
}

/* Make each service-card fill the full width available */
#services-cards-container .service-card {
    width: 100%; /* Đảm bảo mỗi thẻ dịch vụ chiếm toàn bộ chiều rộng của container cha */
    margin-left: 0;
    margin-right: 0;
}

.service-card .carousel-container {
    height: 100%;
    min-height: 300px;
    max-height: 450px; /* Có thể điều chỉnh chiều cao tối đa này */
    width: 100%;
}

/* Đảm bảo carousel-item chiếm 100% chiều rộng của carousel-inner để cuộn đúng */
.service-card .carousel-item {
    flex-shrink: 0; /* Ngăn không cho item bị co lại */
    width: 100%; /* Quan trọng: mỗi item phải chiếm 100% chiều rộng của .carousel-inner */
    height: 100%;
}

.service-card .carousel-item img,
.service-card .carousel-item video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.75rem; /* rounded-xl from Tailwind */
}

/* Adjust carousel indicators */
.carousel-indicators {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
    z-index: 20;
}

.carousel-indicators .indicator {
    width: 10px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.5); /* Màu nền mặc định cho indicator */
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.carousel-indicators .indicator.active {
    background-color: #fff; /* Màu trắng cho indicator đang active */
}

/* Responsive adjustments */
@media (max-width: 767px) { /* For screens smaller than md breakpoint */
    .service-card {
        flex-direction: column; /* Stack content and carousel vertically */
    }

    .service-card .service-details-wrapper,
    .service-card .project-carousel-wrapper {
        width: 100%; /* Full width on small screens */
        padding-left: 0;
        padding-right: 0;
    }

    .service-card .project-carousel-wrapper {
        margin-top: 1.5rem; /* Add some space above carousel on small screens */
    }
}

        /* Portfolio specific styles (Moved from standalone and refined) */
        .project-thumbnail-container {
            position: relative;
            width: 100%;
            height: 256px; /* h-64 equivalent */
            overflow: hidden;
            border-radius: 0.75rem 0.75rem 0 0; /* rounded-xl on top */
            display: flex; /* For centering content if needed */
            justify-content: center;
            align-items: center;
        }

        .project-thumbnail-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: opacity 0.3s ease-in-out; /* Smooth transition for image changes */
            position: absolute; /* Stack images for fading */
            top: 0;
            left: 0;
            opacity: 0; /* Hidden by default */
        }

        .project-thumbnail-image.active {
            opacity: 1; /* Active image is visible */
        }

        .skill-tag {
            display: inline-block;
            background-color: var(--color-skill-tag-bg); /* Use new skill tag background color */
            color: #ffffff; /* White text for tags */
            font-size: 0.75rem; /* text-xs */
            padding: 0.25rem 0.6rem; /* px-2.5 py-1 */
            border-radius: 9999px; /* rounded-full */
            margin-right: 0.25rem; /* Reduced margin */
            margin-bottom: 0.25rem; /* Reduced margin */
            white-space: nowrap; /* Prevent breaking lines */
            transition: transform 0.2s ease-in-out, background-color 0.2s ease-in-out;
        }
        .skill-tag:hover {
            transform: translateY(-2px);
            /* Slightly darken on hover for interaction feedback */
            filter: brightness(1.1); 
        }

        .project-details-link-button {
            position: absolute;
            bottom: 1rem; /* 16px from bottom */
            right: 1rem; /* 16px from right */
            z-index: 20; /* Ensure it's above other elements if content overlaps */
        }

        /* Carousel Indicators for thumbnail */
        .thumbnail-indicators {
            position: absolute;
            bottom: 0.5rem; /* A bit higher than the button */
            left: 0.5rem;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: 0.3rem; /* Smaller gap for compact look */
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
            padding: 0.3rem 0.5rem;
            border-radius: 9999px; /* Rounded pill shape */
        }

        .thumbnail-indicators span {
            width: 0.5rem; /* Smaller size */
            height: 0.5rem; /* Smaller size */
            background-color: var(--color-gray-text); /* Use gray text for inactive indicators */
            border-radius: 50%;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out;
        }

        .thumbnail-indicators span.active {
            background-color: var(--color-button-primary); /* Use primary button color for active indicator */
        }
        .aspect-ratio-box {
  position: relative;
  width: 100%;
  aspect-ratio: 16 / 9; /* ✅ quan trọng nhất */
  background: transparent;
  overflow: hidden;
}

.three-container {
  position: absolute;
  inset: 0;
}

         /* Đảm bảo canvas chiếm toàn bộ container */
        #three-js-container canvas {
            display: block;
            width: 100% !important; 
            height: 100% !important;
        }
        /* Đảm bảo không có nền đen cứng từ Tailwind */
        #three-js-container {
            background-color: transparent; /* Hoặc bỏ hoàn toàn class bg-black của Tailwind */
        }
        


        #error {
            color: red;
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 100;
        }
        #resetAnimationButton {
            position: fixed; /* Giữ nút cố định trên màn hình */
            top: 10px;
            left: 10px;
            z-index: 1000;
            padding: 8px 12px;
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s ease;
        }
        #resetAnimationButton:hover {
            background-color: rgba(0, 0, 0, 0.9);
        }
       
/* ========================================= */
/* Scroll Reveal Animations */
/* ========================================= */

/* Initial state for elements to be revealed */
.scroll-reveal, .scroll-reveal-x {
    opacity: 0;
    transform: translateY(20px); /* Move down slightly */
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

/* Initial state for elements to be revealed from left/right */
.scroll-reveal-x {
    transform: translateX(-50px); /* Example: start from left */
}

/* State when 'visible' class is added */
.scroll-reveal.visible, .scroll-reveal-x.visible {
    opacity: 1;
    transform: translateY(0); /* Return to original position */
}

/* Specific for .scroll-reveal-x when 'visible' */
.scroll-reveal-x.visible {
    transform: translateX(0); /* Return to original position */
}


/* Delay effects (can be combined with scroll-reveal) */
.delay-150 { transition-delay: 0.15s; }
.delay-300 { transition-delay: 0.3s; }
.delay-450 { transition-delay: 0.45s; }
.delay-600 { transition-delay: 0.6s; }
.delay-750 { transition-delay: 0.75s; }
.delay-900 { transition-delay: 0.9s; }
.delay-1050 { transition-delay: 1.05s; }
.delay-1200 { transition-delay: 1.2s; }
.delay-1350 { transition-delay: 1.35s; }
.delay-1500 { transition-delay: 1.5s; }
/* Add more delay classes as needed */

/* Ensure the preloader hides the content properly initially */
/* This is already in index.html, but keeping it here for context if moved */
/* Đừng ẩn toàn bộ main */
body.home.is-loading section:not(#preloader),
body.home.is-loading #header,
body.home.is-loading #footer {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
}



/* Section background gradient for all main sections - seamless effect */
section {
    background: none;
    background-color: transparent;
    position: relative;
    z-index: 1;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 0;
    pointer-events: none;
    background: linear-gradient(
        to bottom,
        var(--color-gradient-from-1) 0%,
        var(--color-gradient-to-1) 100%
    );
    transition: background 0.5s;
}

main, .main-content {
    position: relative;
    z-index: 2;
}

/* Remove background for special cases if needed */
section.bg-transparent, section.bg-none {
    background: none !important;
}

/* Optional: If you want to keep cards/forms distinct, keep their bg as card */
.bg-card {
    background-color: var(--color-bg-card);
}

/* Portfolio Card Hover Scale Adjustment */
#portfolio-grid .bg-card,
#portfolio-grid .portfolio-card,
#portfolio-grid .project-card {
    transition: transform 0.3s cubic-bezier(0.4,0,0.2,1), box-shadow 0.3s cubic-bezier(0.4,0,0.2,1);
}
#portfolio-grid .bg-card:hover,
#portfolio-grid .portfolio-card:hover,
#portfolio-grid .project-card:hover {
    transform: scale(1.03); /* Giảm hiệu ứng scale khi hover */
    box-shadow: 0 8px 24px 0 rgba(0,0,0,0.10);
}

/* Header and mobile icon colors based on theme */
body[data-theme='dark'] header {
  background: var(--color-header-bg-dark) !important;
  color: var(--color-header-text-dark) !important;
}
body[data-theme='light'] header {
  background: var(--color-header-bg-light) !important;
  color: var(--color-header-text-light) !important;
}
body[data-theme='dark'] header .text-main,
body[data-theme='dark'] header nav ul li a {
  color: var(--color-header-text-dark) !important;
}
body[data-theme='light'] header .text-main,
body[data-theme='light'] header nav ul li a {
  color: var(--color-header-text-light) !important;
}

body[data-theme='dark'] #mobile-toggle .menu-item a i,
body[data-theme='dark'] #mobile-toggle > i.fa-solid {
  color: var(--color-mobile-icon-dark) !important;
}
body[data-theme='light'] #mobile-toggle .menu-item a i,
body[data-theme='light'] #mobile-toggle > i.fa-solid {
  color: var(--color-mobile-icon-light) !important;
}

body[data-theme='dark'] #mobile-toggle {
  background: var(--color-header-bg-dark) !important;
}

/* Thêm border sáng cho header và mobile-toggle khi dùng dark theme để nổi bật trên nền tối */
body[data-theme='dark'] header,
body[data-theme='dark'] #mobile-toggle {
  border-bottom: 1px solid #e5e7eb65 !important; /* slate-200 */
  border-top: none;
  border-left: none;
  border-right: none;
}
body[data-theme='dark'] #mobile-toggle {
  border-left: 1px solid #e5e7eb84 !important;
  border-bottom: none;
}
body[data-theme='dark'] #mobile-toggle {
  background: var(--color-header-bg-dark) !important;
}
body[data-theme='light'] #mobile-toggle {
  background: var(--color-header-bg-light) !important;
}